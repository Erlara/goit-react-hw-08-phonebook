{"version":3,"file":"static/js/386.0355c48e.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/selectors.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  width: 320px;\n  height: 200px;\n  margin-bottom: 20px;\n  padding: 30px 20px;\n  border-radius: 10px;\n  box-shadow: 0px 10px 10px #072f13;\n`;\n\nexport const Label = styled.label`\n  width: 80%;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\n\nexport const Button = styled.button`\n  margin-top: 30px;\n  height: 30px;\n  width: 100px;\n  border-radius: 5px;\n  background-color: #f0d29b;\n  :hover {\n    background-color: rgb(245, 161, 248);\n  }\n`;\n\nexport const Input = styled.input`\n  height: 25px;\n  border-radius: 5px;\n`;\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n","import { useState } from 'react';\nimport { Button, Form, Input, Label } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/operations';\n\nexport function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleChange = e => {\n    const nameInput = e.currentTarget.name;\n    const valueInput = e.currentTarget.value;\n\n    switch (nameInput) {\n      case 'name':\n        setName(valueInput);\n        break;\n      case 'number':\n        setNumber(valueInput);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const oldContacts = contacts.map(({ name }) => name.toLowerCase());\n\n    if (oldContacts.includes(name.toLowerCase())) {\n      return alert(`${name} is already in contacs.`);\n    }\n\n    dispatch(addContact({ name, number }));\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n}\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 20px 0 0 0;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  font-size: 22px;\n\n  :not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const Button = styled.button`\n  margin-left: 10px;\n  height: 30px;\n  width: 70px;\n  border-radius: 5px;\n  background-color: #f0d29b;\n  :hover {\n    background-color: rgb(245, 161, 248);\n  }\n`;\n","import { Button, Item, List } from './ContactList.styled';\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport { TfiFaceSmile } from 'react-icons/tfi';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  return (\n    <List>\n      {filteredContacts.map(({ name, number, id }) => (\n        <Item key={id}>\n          <TfiFaceSmile />\n          <b> {name}</b>: {number}\n          <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n            Delete\n          </Button>\n        </Item>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  row-gap: 5px;\n  margin-top: 10px;\n  width: 260px;\n`;\n\nexport const Input = styled.input`\n  height: 25px;\n  border-radius: 5px;\n`;\n\nexport const Text = styled.span`\n  text-align: center;\n  font-size: 22px;\n`;\n","import { Input, Label, Text } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(selectFilter);\n\n  const changeFilter = e => dispatch(filterContacts(e.currentTarget.value));\n\n  return (\n    <Label>\n      <Text>Find contacts by name:</Text>\n      <Input type=\"text\" name=\"filter\" value={value} onChange={changeFilter} />\n    </Label>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/operations';\nimport { selectError, selectIsLoading } from 'redux/selectors';\n\nconst styles = {\n  container: {\n    minHeight: 'calc(100vh - 70px)',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n};\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div style={styles.container}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["Form","styled","Label","Button","Input","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","handleChange","e","nameInput","currentTarget","valueInput","value","reset","onSubmit","preventDefault","map","toLowerCase","includes","alert","addContact","type","pattern","title","required","onChange","List","Item","ContactList","filteredContacts","normalizedFilter","getFilteredContacts","id","onClick","deleteContact","Text","Filter","filterContacts","styles","container","minHeight","display","flexDirection","alignItems","Contacts","useEffect","fetchContacts","style"],"sourceRoot":""}